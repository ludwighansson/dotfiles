#!/usr/bin/env bash

YABAI_MOVE_MOUSE_WITH_SPACE="${YABAI_MOVE_MOUSE_WITH_SPACE:-true}"
YABAI_ALTERNATE_SCREEN_IDS="${YABAI_ALTERNATE_SCREEN_IDS:-false}"

function panic() {
	echo "${*}" 1>&2
	exit 1;
}

function get_active_display() {
	local window_id="${1}"
	yabai -m query --windows --window "${window_id}" | jq '.display'
}

function get_total_display_count() {
	yabai -m query --displays | jq 'map(.index) | length'
}

function get_window_id_from_space() {
	yabai -m query --spaces --space "${target_space}" | jq '.windows | first'
}

function focus_on_space() {
	local space_window_id="${1}"
	yabai -m window --focus "${space_window_id}"
}

function move_mouse_with_space() {
	local window_id="${1}"

	# Get active display id
	current_display=$(get_active_display)
	[[ ${?} -eq 0 ]] \
		|| panic "failed to extract display id from current window"
	
	# Get target display id
	target_display=$(get_active_display "${target_space_window_id}")
	[[ ${?} -eq 0 ]] \
		|| panic "failed to extract display id from target window"

	# If the target window is on a different screen, move the mouse with it
	[[ "${current_display}" -eq "${target_display}" ]] \
		|| yabai -m config mouse_follows_focus on
	
	# Move to space
	focus_on_space "${window_id}"

	# Reset mouse follow window focus to not interfere 
	# when moving between spaces or windows on the same screen
	[[ "${current_display}" -eq "${target_display}" ]] \
		|| yabai -m config mouse_follows_focus off
}

function get_alternated_space_id() {
	local space_id="${1}"
	
	local all_spaces=""
	local displays=$(yabai -m query --displays | jq '.[] | .index')
	for d in ${displays}; do
		local count=0
		local spaces=$(yabai -m query --displays --display "${d}" | jq '.spaces[]')
		for s in ${spaces}; do
			# If the space have open windows, add it to the list
			get_window_id_from_space ${s} > /dev/null \
				&& all_spaces=$(echo "${all_spaces}"; echo "${count} ${s}")
			count=$((count+1))
		done
	done

	local all_spaces=$(echo "${all_spaces}" | sort -nk1 | cut -f2 -d ' ' | sed '/^$/d')
	sed -n "${space_id}p" <<< "${all_spaces}"
}

[[ "${YABAI_ALTERNATE_SCREEN_IDS}" == "true" ]] \
	&& target_space="$(get_alternated_space_id ${1})" \
	|| target_space="${1}"

target_space_window_id=$(get_window_id_from_space "${target_space}")
[[ ${?} -eq 0 ]] \
	|| panic "could not find any window on space ${target_space}"

# Get current space 
current_space=$(yabai -m query --spaces --space | jq '.index')
[[ ${?} -eq 0 ]] \
	|| panic "failed to extract current space index"

# Exit if targeting the same space as the ative one
[[ "${target_space}" -eq "${current_space}" ]] \
	&& { echo "targeting the current space, skipping..."; exit 0; }

[[ "${YABAI_MOVE_MOUSE_WITH_SPACE}" == "true" ]] \
	&& move_mouse_with_space "${target_space_window_id}" \
	|| focus_on_space "${target_space_window_id}"
